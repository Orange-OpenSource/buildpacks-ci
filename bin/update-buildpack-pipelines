#!/usr/bin/env ruby
# encoding: utf-8

# raise '`brew install lastpass-cli` is required' if `which lpass` == ''

def header(msg)
  print '*' * 10
  puts " #{msg}"
end

# def set_pipeline(name:, cmd:, load: [])
#   puts system(%{bash -c "fly -t buildpacks set-pipeline \
#     -p #{name} \
#     -c <(#{cmd}) \
#     -l <(lpass show 'Shared-Buildpacks/concourse-private.yml' --notes && lpass show 'Shared-Buildpacks/deployments-buildpacks.yml' --notes) \
#     #{load.collect { |l| "-l #{l}" }.join(' ')}
#   "})
# end

require 'yaml'

flyrc  = YAML.load_file(File.expand_path('~/.flyrc'))
target_name="concourse-cw"
target = flyrc['targets'][target_name]
concourse_url= target['api']

buildpacks_org="Orange-OpenSource"

def set_pipeline(target_name:,name:, cmd:, load: [])
  puts system(%{bash -c "fly -t #{target_name} set-pipeline \
    -p buildpack-#{name} \
    -c <(#{cmd}) \
    -l concourse-private.yml
  "})
end

header('For buildpack pipelines')
Dir['config/buildpack/*.yml'].each do |filename|
  language = File.basename(filename, '.yml')
  puts "   #{language} buildpack"
  set_pipeline(
    target_name: target_name,
    name: "#{language}-buildpack",
    cmd: "erb language=#{language} concourse_url=#{concourse_url} organization=#{buildpacks_org} pipelines/templates/buildpack.yml",
    load: [filename]
  )
end


puts 'Thanks, JT'
